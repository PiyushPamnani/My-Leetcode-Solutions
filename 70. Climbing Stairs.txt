/* Complexity
Time complexity:
O(n)

Space complexity:
O(n)

Code 1 using vector
*/

class Solution {
public:
    int climbStairs(int n) {
        vector<int> dp(n+1);

        if(n==1 || n==2)
            return n;

        dp[1] = 1;
        dp[2] = 2;

        for(int i=3;i<=n;i++)
            dp[i] = dp[i-1] + dp[i-2];
        
        return dp[n];
    }
};


/* Complexity
Time complexity:
O(n)

Space complexity:
O(1)

Code 2 Space Optimized
*/


class Solution {
public:
    int climbStairs(int n) {
        if(n==1 || n==2)
            return n;

        int nMinus1 = 2, nMinus2 = 1;

        for(int i=3;i<=n;i++)
        {
            int curr = nMinus1 + nMinus2;

            nMinus2 = nMinus1;
            nMinus1 = curr;
        }
        
        return nMinus1;
    }
};